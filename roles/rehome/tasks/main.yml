---
- name: Create user
  register: new_user
  user:
    name: "{{ rehome_user }}"

- name: Create .ssh directory
  become: yes
  become_user: "{{ rehome_user }}"
  when: new_user.changed
  file:
    path: "~/.ssh"
    state: directory
    mode: 0700

- name: Install GitHub deploy key
  become: yes
  become_user: "{{ rehome_user }}"
  copy:
    dest: "~/.ssh/id_rsa"
    src: id_rsa
    mode: 0600

- name: Create app directory
  file:
    path: "{{ rehome_dir }}"
    state: directory
    owner: "{{ rehome_user }}"
    group: "{{ rehome_user }}"
    mode: 0750

- name: Pull git repo
  become: yes
  become_user: "{{ rehome_user }}"
  register: gitclone
  git:
    repo: "git@github.com:TheReverend403/rehome.git"
    dest: "{{ rehome_dir }}"
    accept_hostkey: yes
  notify: restart rehome

- name: Update dependencies
  become: yes
  become_user: "{{ rehome_user }}"
  when: gitclone.changed
  command:
    chdir: "{{ rehome_dir }}"
    cmd: "{{ item }} install"
  with_items:
    - poetry
    - yarn

- name: Ensure config directory exists
  tags: configuration
  file:
    path: "{{ rehome_dir }}/config"
    state: directory
    owner: "{{ rehome_user }}"
    group: "{{ rehome_user }}"
    mode: 0700

- name: Configure
  tags: configuration
  become: yes
  become_user: "{{ rehome_user }}"
  template:
    src: config.yml.j2
    dest: "{{ rehome_dir }}/config/config.yml"
    mode: 0600
  notify: restart rehome

- name: Build assets
  become: yes
  become_user: "{{ rehome_user }}"
  when: gitclone.changed
  command:
    chdir: "{{ rehome_dir }}"
    cmd: "poetry run flask assets {{ item }}"
  with_items:
    - clean
    - build

- name: Set up database
  include_role:
    name: postgresql
  vars:
    postgresql_app_user: "{{ rehome_database_user }}"
    postgresql_app_user_password: "{{ rehome_database_password }}"
    postgresql_app_database: "{{ rehome_database }}"

- name: Run database migrations
  become: yes
  become_user: "{{ rehome_user }}"
  when: gitclone.changed
  command:
    chdir: "{{ rehome_dir }}"
    cmd: "poetry run flask db migrate"

- name: Flush handlers
  meta: flush_handlers

- name: Ensure service is started and enabled
  service:
    name: flask@rehome
    state: started
    enabled: yes
